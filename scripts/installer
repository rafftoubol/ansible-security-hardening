#!/bin/bash

# Package Installer Script
# Usage: ./package_installer.sh
# Description: Installs multiple packages on a Linux system

# Define color codes for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Exit on error
set -e

# Function to display script usage
usage() {
    echo "Usage: $0 [OPTIONS]"
    echo "Options:"
    echo "  -h, --help    Display this help message"
    echo "  -y, --yes     Automatic yes to prompts (non-interactive mode)"
    echo "  -v, --verbose Enable verbose output"
    exit 1
}

# Function to log messages
log() {
    local level=$1
    local message=$2
    
    case $level in
        "info")
            echo -e "[${GREEN}INFO${NC}] $message"
            ;;
        "warn")
            echo -e "[${YELLOW}WARNING${NC}] $message"
            ;;
        "error")
            echo -e "[${RED}ERROR${NC}] $message"
            ;;
        *)
            echo -e "$message"
            ;;
    esac
}

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to determine package manager
detect_package_manager() {
    if command_exists apt-get; then
        PACKAGE_MANAGER="apt-get"
        INSTALL_CMD="apt-get install -y"
        UPDATE_CMD="apt-get update"
    elif command_exists dnf; then
        PACKAGE_MANAGER="dnf"
        INSTALL_CMD="dnf install -y"
        UPDATE_CMD="dnf check-update"
    elif command_exists yum; then
        PACKAGE_MANAGER="yum"
        INSTALL_CMD="yum install -y"
        UPDATE_CMD="yum check-update"
    elif command_exists zypper; then
        PACKAGE_MANAGER="zypper"
        INSTALL_CMD="zypper install -y"
        UPDATE_CMD="zypper refresh"
    elif command_exists pacman; then
        PACKAGE_MANAGER="pacman"
        INSTALL_CMD="pacman -S --noconfirm"
        UPDATE_CMD="pacman -Sy"
    else
        log "error" "No supported package manager found!"
        exit 1
    fi
}

# Initialize variables
AUTO_YES=false
VERBOSE=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            usage
            ;;
        -y|--yes)
            AUTO_YES=true
            shift
            ;;
        -v|--verbose)
            VERBOSE=true
            shift
            ;;
        *)
            log "error" "Unknown option: $1"
            usage
            ;;
    esac
done

# List of packages to install
# Add or remove packages as needed
PACKAGES=(
    "wget"
    "curl"
    "git"
    "neovim"
    "bat"
    "jq"
    "sshs"
    "tmux"
    # Add more packages here
)

# Check for root privileges
if [ "$(id -u)" -ne 0 ]; then
    log "error" "This script must be run as root or with sudo privileges."
    exit 1
fi

# Detect package manager
detect_package_manager
log "info" "Detected package manager: $PACKAGE_MANAGER"

# Update package repositories
log "info" "Updating package repositories..."
if $VERBOSE; then
    eval $UPDATE_CMD
else
    eval $UPDATE_CMD >/dev/null 2>&1
fi

# Confirm installation if not in auto-yes mode
if ! $AUTO_YES; then
    log "info" "The following packages will be installed:"
    printf "  %s\n" "${PACKAGES[@]}"
    
    read -p "Do you want to continue? [y/N] " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log "info" "Installation aborted."
        exit 0
    fi
fi

# Install packages
log "info" "Installing packages..."
FAILED_PACKAGES=()

for package in "${PACKAGES[@]}"; do
    log "info" "Installing $package..."
    if $VERBOSE; then
        if eval "$INSTALL_CMD $package"; then
            log "info" "$package installed successfully."
        else
            log "warn" "Failed to install $package."
            FAILED_PACKAGES+=("$package")
        fi
    else
        if eval "$INSTALL_CMD $package" >/dev/null 2>&1; then
            log "info" "$package installed successfully."
        else
            log "warn" "Failed to install $package."
            FAILED_PACKAGES+=("$package")
        fi
    fi
done

# Summary
echo
log "info" "Installation complete."
if [ ${#FAILED_PACKAGES[@]} -eq 0 ]; then
    log "info" "All packages were installed successfully."
else
    log "warn" "The following packages failed to install:"
    printf "  %s\n" "${FAILED_PACKAGES[@]}"
fi

exit 0